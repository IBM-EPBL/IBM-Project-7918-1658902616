from flask import Flask, render_template, session, request, redirect,make_response
import ibm_db
from ibm_db2_connect import db2
import news
import json
app = Flask(__name__)
app.secret_key = "secret_key"
@app.route('/', methods=['GET', 'POST'])
def index():
if session.get('logged_in'):
return render_template('home.html')
return render_template('index.html')
@app.route('/login',methods=['POST'])
def login():
form_user = request.form['username']
session['logged_in']=form_user
return redirect('/')
@app.route('/loginvalidate',methods=['POST','GET'])
def loginvalidate():
conn = db2.get_conn()
data=request.get_json();
form_user = data['email']
form_password = data['password']
sql = 'SELECT username from user WHERE mail=? and password=?'
stmt = ibm_db.prepare(conn, sql)
ibm_db.bind_param(stmt, 1, form_user)
ibm_db.bind_param(stmt, 2, form_password)
ibm_db.execute(stmt)
account = ibm_db.fetch_assoc(stmt)
if account:
response = make_response('success',200)
else:
response = make_response('failure',200)
response.mimetype = "text/plain"
return response
@app.route('/register',methods=['POST'])
def register():
try:
conn = db2.get_conn()
data=request.get_json();
form_user = data['username']
form_password = data['password']
form_mail = data['mail']
form_phone = data['phone']
sql = 'insert into user values(?,?,?,?)'
stmt = ibm_db.prepare(conn, sql)
ibm_db.bind_param(stmt, 1, form_user)
ibm_db.bind_param(stmt, 2, form_password)
ibm_db.bind_param(stmt, 3, form_mail)
ibm_db.bind_param(stmt, 4, form_phone)
Untitled 2
ibm_db.execute(stmt)
response = make_response('success',200)
except Exception as e:
response = make_response('failure',200)
print(e)
return response
@app.route('/checkForExistingUser',methods=['POST'])
def checkForExistingUser():
conn = db2.get_conn()
data=request.get_json();
email=data['email'];
print(email)
sql = 'SELECT mail from user WHERE mail=?'
stmt = ibm_db.prepare(conn, sql)
ibm_db.bind_param(stmt, 1, email)
ibm_db.execute(stmt)
account = ibm_db.fetch_assoc(stmt)
print(account)
if account:
response = make_response('true',200)
else:
response = make_response('false',200)
response.mimetype = "text/plain"
return response
@app.route('/search',methods=['POST'])
def getNews():
getRequests=request.get_json()
articles=news.getNews(getRequests)
# print(json.dumps(articles))
response = make_response(json.dumps(articles),200)
response.mimetype="text"
return response
@app.route('/logout')
def logout():
session.clear()
return render_template('index.html')
if __name__ == '__main__':
app.run(debug=True, port=5002)

import requests
from config import API_KEY
def getNews(query:dict):
query_string="q="+query.get('q')
main_url="https://newsapi.org/v2/top-headlines?"
final_url="{0}{1}&apiKey={2}".format(main_url,query_string,API_KEY)
article=requests.get(final_url)
return article.json()

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Document</title>
<script
src="https://code.jquery.com/jquery-3.6.1.js"
integrity="sha256-3zlB5s2uwoUzrXK3BT7AX3FyvojsraNFxCc2vC/7pNI="
crossorigin="anonymous"
></script>
<link
rel="stylesheet"
href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
/>
<link rel="stylesheet"
href="{{url_for('static',filename='home.style.css')}}"
</head>
<body>
<nav class="navbar">
<div class="searchContainer">
<input
type="text"
name="searchBox"
id="searchBox"
placeholder="search"
/>
<button id="searchButton">
<i class="fa fa-search" aria-hidden="true"></i>
</button>
</div>
<div class="userProfile">
<div class="logout">
<a href="{{url_for('logout')}}" target="" rel="">Logout</a>
</div>
</div>
</nav>
<div class="news">
<ul id="newsList"></ul>
</div>
<script src="{{url_for('static',filename='ajaxRequests.js')}}"></script>
</body>
</html>

@import url("https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&display=swap");
* {
margin: 0;
box-sizing: border-box;
padding: 0;
font-family: "Poppins", sans-serif;
}
nav.navbar {
position: sticky;
top: 0;
width: 100vw;
display: grid;
grid-template-columns: 1fr 1fr;
background-color: #333;
}
nav.navbar .searchContainer {
display: inline-block;
padding: 0.5rem;
/* height:100px; */
}
nav.navbar .searchContainer input {
padding: 0.5rem;
border-radius: 50px;
}
nav.navbar .searchContainer button {
border-radius: 1.5rem;
width: 3rem;
height: 3rem;
color: #000;
background:#fff;
cursor: pointer;
transition: background 0.5s ease;
}
nav.navbar .searchContainer button:hover{
background: -webkit-linear-gradient(right, #a445b2, #fa4299, #a445b2, #fa4299);
color:#fff;
}
nav.navbar .userProfile .logout {
float: right;
padding: 1rem;
}
nav.navbar .userProfile .logout a {
text-decoration: none;
color: #fff;
}
.news #newsList {
list-style: none;
display: grid;
grid-template-columns: 1fr 1fr 1fr;
/* flex-direction: column; */
}
.news #newsList a {
border-radius: 5px;
margin: 1vw;
box-shadow: 0 0 15px -2px rgba(0, 0, 0, 0.2);
text-decoration: none;
color: #000000;
}
.news #newsList a li {
padding: 10px 5px;

overflow: scroll;
}
.news #newsList a li::-webkit-scrollbar {
display: none;
}
.news #newsList a li img {
width: 10rem;
height: 10rem;
display: block;
object-fit: cover;
}

// const { readFileSync, promises: fsPromises } = require("fs");
$(document).ready(function () {
testFunction();
function testFunction(){
// search_val = $("#searchBox").val();
search_val="india"
var queryString = { q: search_val };
$.ajax({
method: "POST",
url: "/search",
contentType: "application/json;charset=utf-8",
cache: false,
datatype: "text",
data: JSON.stringify(queryString),
success: function (data) {
// alert("yes");
wholeJson = JSON.parse(data);
articles=wholeJson['articles'];
// $("#news").text(data)
showNews(articles);
},
error: function (data) {
// alert("error");
},
});
}
function showNews(articles) {
// articles = wholeJson["articles"];
var newslist = document.getElementById("newsList");
newslist.innerHTML = "";
for (var i = 0; i < articles.length; i++) {
description = articles[i].description;
image_url = articles[i].urlToImage;
link_url = articles[i].url;
var a=document.createElement("a");
var li = document.createElement("li");
var image = document.createElement("img");
image.src = image_url;
image.innerHTML = "<img src=" + image_url + ' class="newsImages"/>';
li.innerHTML =
'<div class="newsLi" id="news_' + i + '">' + description + "</div>";
li.appendChild(image);
a.setAttribute('href',link_url)
a.setAttribute('target','_blank')
a.appendChild(li);
newslist.appendChild(a);
}
}
$("#searchButton").click(function () {
search_val = $("#searchBox").val();
var queryString = { q: search_val };
$.ajax({
method: "POST",
url: "/search",
contentType: "application/json;charset=utf-8",
cache: false,
datatype: "text",
data: JSON.stringify(queryString),
success: function (data) {
// alert("yes");
wholeJson = JSON.parse(data);
articles=wholeJson['articles'];
// $("#news").text(data)
showNews(articles);
},
error: function (data) {
alert("error");
},
});
});
});